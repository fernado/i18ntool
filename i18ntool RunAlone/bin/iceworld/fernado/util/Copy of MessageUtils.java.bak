/**

 * native2ascii.exe Java code implementation.
 * 
 * Created by fernado
 * on 28/07/2010
 */
package iceworld.fernado.util;


public class MessageUtils {
	
	/**
	 * prefix of ascii string of native character
	 */
	private static String PREFIX = "\\u";
	
	private static char BACKSPLASH = (char) 92;
	
	/**
	 * Native to ascii string. 
	 * It's the same as execut native2ascii.exe.
	 * but this will use UTF-8 encoding 
	 * 
	 * @param str
	 *            native string
	 * @return ascii string
	 */
	public static String native2Ascii(final String str) {
		char[] chars = str.toCharArray();
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < chars.length; i++) {
			sb.append(char2Ascii(chars[i]));
		}
		return sb.toString();
	}

	/**
	 * Native character to ascii string.
	 * 
	 * @param c
	 *            native character
	 * @return ascii string
	 */
	private static String char2Ascii(final char c) {
		if (c > 255) {
			StringBuilder sb = new StringBuilder();
			sb.append(BACKSPLASH);
			int code = (c >> 8);
			String tmp = Integer.toHexString(code);
			if (tmp.length() == 1) {
				sb.append("0");
			}
			sb.append(tmp);
			code = (c & 0xFF);
			tmp = Integer.toHexString(code);
			if (tmp.length() == 1) {
				sb.append("0");
			}
			sb.append(tmp);
			return sb.toString();
		} else {
			return Character.toString(c);
		}
	}

	/**
	 * Ascii to native string. It's same as execute native2ascii.exe -reverse.
	 * like native2ascii.exe -reverse -encoding UTF-8 input output
	 * 
	 * @param str
	 *            ascii string
	 * @return native string
	 */
	public static String ascii2Native(final String str) {
		StringBuilder sb = new StringBuilder();
		int begin = 0;
		int index = str.indexOf(BACKSPLASH);
		while (index != -1) {
			sb.append(str.substring(begin, index));
			sb.append(ascii2Char(str.substring(index, index + 5)));
			begin = index + 5;
			index = str.indexOf(BACKSPLASH, begin);
		}
		sb.append(str.substring(begin));
		return sb.toString();
	}

	/**
	 * Ascii to native character.
	 * 
	 * @param str
	 *            ascii string
	 * @return native character
	 */
	private static char ascii2Char(final String str) {
		if (str.length() != 5) {
			throw new IllegalArgumentException(
					"Ascii string of a native character must be 6 character.");
		}
		if (BACKSPLASH != str.substring(0, 1).charAt(0)) {
			throw new IllegalArgumentException(
					"Ascii string of a native character must start with \"\\u\".");
		}
		String tmp = str.substring(2, 4);
		int code = Integer.parseInt(tmp, 16) << 8;
		tmp = str.substring(4, 6);
		code += Integer.parseInt(tmp, 16);
		return (char) code;
	}

}
